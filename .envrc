#!/usr/bin/env bash
# Load nix development environment
if ! has nix_direnv_version || ! nix_direnv_version 3.1.0; then
  source_url "https://raw.githubusercontent.com/nix-community/nix-direnv/3.1.0/direnvrc" "sha256-yMJ2OVMzrFaDPn7q8nCBZFRYpL/f0RcHzhmw/i6btJM="
fi

use flake

# Add all scripts directories to PATH
PATH_add scripts
PATH_add ansible/scripts
PATH_add esphome/scripts
PATH_add kubernetes/scripts
PATH_add tools/recyclarr
PATH_add tools/managarr

if on_git_branch; then
  echo && git status --short --branch &&
  echo && git fetch --verbose
fi

# Load secrets from 1Password
export RADARR_API_KEY=$(op read "op://infra/radarr/api_key")
export SONARR_API_KEY=$(op read "op://infra/sonarr/api_key")

# ARA (Ansible Run Analysis) configuration
# Sends playbook run data to centralized ARA server at ara.k.oneill.net
export ARA_API_CLIENT=http
export ARA_API_SERVER=https://ara.k.oneill.net
export ARA_API_TIMEOUT=30
# Use threading for PostgreSQL backend to avoid SSL connection reuse issues
export ARA_CALLBACK_THREADS=4

# API credentials for basic auth (stored in 1Password: ara-api-basic-auth)
export ARA_API_USERNAME=ara
# Only fetch from 1Password if op command is available (not in Semaphore container)
if command -v op >/dev/null 2>&1; then
  ARA_API_PASSWORD=$(op item get ara-api-basic-auth --vault infra --fields password 2>/dev/null)
  if [ -z "$ARA_API_PASSWORD" ]; then
    echo "Warning: Failed to fetch ARA API password from 1Password" >&2
    echo "ARA recording may fail with authentication errors" >&2
  fi
  export ARA_API_PASSWORD
fi

# Get ARA callback plugin path from installed package
ARA_CALLBACK_PATH=$(python3 -c "import ara.setup; print(ara.setup.callback_plugins)" 2>/dev/null)
if [ -n "$ARA_CALLBACK_PATH" ]; then
  export ANSIBLE_CALLBACK_PLUGINS="$ARA_CALLBACK_PATH"
  export ANSIBLE_CALLBACKS_ENABLED=ara_default
fi

# Get ARA action plugin path for ara_playbook action
ARA_ACTION_PATH=$(python3 -c "import ara.setup; print(ara.setup.action_plugins)" 2>/dev/null)
if [ -n "$ARA_ACTION_PATH" ]; then
  export ANSIBLE_ACTION_PLUGINS="$ARA_ACTION_PATH"
fi
