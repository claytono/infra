---
name: ArgoCD Diff Command

on:
  pull_request:
  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write

jobs:
  argocd-diff:
    runs-on: ubuntu-latest
    env:
      ARGOCD_SERVER: argocd.cow-banjo.ts.net
      ARGOCD_OPTS: --grpc-web

    steps:
    - name: Ensure this is a PR comment
      if: github.event_name == 'issue_comment'
      run: |
        if [ -z "${{ github.event.issue.pull_request.url }}" ]; then
          echo "Not a PR ‚Äì skipping"
          exit 1
        fi

    - name: Check for diff command
      if: github.event_name == 'issue_comment'
      id: diff
      uses: xt0rted/slash-command-action@v2.0.0
      continue-on-error: true
      with:
        command: diff
        permission-level: admin

    - name: Set diff command for PR events
      if: github.event_name == 'pull_request'
      id: diff-pr
      run: |
        echo "command-name=diff" >> $GITHUB_OUTPUT

    - name: Checkout PR head
      if: steps.diff.outputs.command-name || steps.diff-pr.outputs.command-name ||
        steps.diff-pr.outputs.command-name
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event_name == 'pull_request' && github.head_ref || format('refs/pull/{0}/head', github.event.issue.number) }}

    - name: Determine base ref
      if: steps.diff.outputs.command-name || steps.diff-pr.outputs.command-name
      id: base
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Query PR base dynamically instead of assuming 'main'
        PR_NUMBER=${{ github.event_name == 'pull_request' && github.event.number || github.event.issue.number }}
        BASE=$(gh pr view $PR_NUMBER --json baseRefName -q .baseRefName)
        echo "base=$BASE" >> $GITHUB_OUTPUT
        git fetch origin "$BASE:$BASE"

    - name: Get PR head SHA
      if: steps.diff.outputs.command-name || steps.diff-pr.outputs.command-name
      id: pr-head
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        PR_NUMBER=${{ github.event_name == 'pull_request' && github.event.number || github.event.issue.number }}
        PR_HEAD=$(gh pr view $PR_NUMBER --json headRefOid -q .headRefOid)
        echo "sha=$PR_HEAD" >> $GITHUB_OUTPUT

    - name: Detect Changed Apps
      if: steps.diff.outputs.command-name || steps.diff-pr.outputs.command-name
      id: detect
      uses: ./.github/actions/detect-apps
      with:
        base_ref: ${{ steps.base.outputs.base }}
        head_ref: ${{ steps.pr-head.outputs.sha }}
        pr_number: ${{ github.event_name == 'pull_request' && github.event.number || github.event.issue.number }}
        action_type: diff

    - name: Setup ArgoCD environment
      if: steps.diff.outputs.command-name || steps.diff-pr.outputs.command-name &&
        steps.detect.outputs.app_count != '0'
      id: setup-argocd
      uses: ./.github/actions/setup-argocd
      with:
        tailscale_oauth_client_id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
        tailscale_oauth_secret: ${{ secrets.TAILSCALE_OAUTH_CLIENT_SECRET }}

    - name: Get PR branch name
      if: steps.diff.outputs.command-name || steps.diff-pr.outputs.command-name &&
        steps.detect.outputs.app_count != '0'
      id: pr-branch
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        PR_NUMBER=${{ github.event_name == 'pull_request' && github.event.number || github.event.issue.number }}
        PR_BRANCH=$(gh pr view $PR_NUMBER --json headRefName -q .headRefName)
        echo "branch=$PR_BRANCH" >> $GITHUB_OUTPUT

    - name: Cache patchutils
      if: steps.diff.outputs.command-name || steps.diff-pr.outputs.command-name &&
        steps.detect.outputs.app_count != '0'
      uses: awalsh128/cache-apt-pkgs-action@v1.5.3
      with:
        packages: patchutils
        version: 1.0

    - name: ArgoCD Diff
      if: steps.diff.outputs.command-name || steps.diff-pr.outputs.command-name &&
        steps.detect.outputs.app_count != '0'
      env:
        ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |-
        # Split apps into array for processing
        IFS=' ' read -ra APPS_ARRAY <<< "${{ steps.detect.outputs.apps }}"

        echo "üîç Running ArgoCD diff for apps: ${{ steps.detect.outputs.apps }}"
        echo "Comparing against branch: ${{ steps.pr-branch.outputs.branch }}"

        # Create diff output for each app
        diff_output=""
        for app in "${APPS_ARRAY[@]}"; do
          echo "Generating diff for $app..."

          # Run argocd diff and capture exit code
          app_diff=$(argocd app diff "$app" --revision "${{ steps.pr-branch.outputs.branch }}" 2>&1)
          exit_code=$?

          if [[ $exit_code -eq 0 ]]; then
            # No differences found
            diff_output="${diff_output}## üìã $app\n\nNo changes detected.\n\n"
          elif [[ $exit_code -eq 1 ]]; then
            # Differences found (exit code 1 means diff found)
            # Convert context diff to unified diff using filterdiff
            if unified_diff=$(echo "$app_diff" | filterdiff --format=unified 2>/dev/null); then
              diff_output="${diff_output}## üìã $app\n\n\`\`\`diff\n$unified_diff\n\`\`\`\n\n"
            else
              # Fallback to original format if filterdiff fails
              diff_output="${diff_output}## üìã $app\n\n\`\`\`diff\n$app_diff\n\`\`\`\n\n"
            fi
          else
            # Actual error occurred (exit code 2 or other)
            diff_output="${diff_output}## üìã $app\n\n‚ùå Failed to generate diff (exit code $exit_code):\n\`\`\`\n$app_diff\n\`\`\`\n\n"
          fi
        done

        # Comment the diff results on the PR
        PR_NUMBER=${{ github.event_name == 'pull_request' && github.event.number || github.event.issue.number }}

        if [[ -n "$diff_output" ]]; then
          # Always comment when there are diffs
          gh pr comment "$PR_NUMBER" --body "$(echo -e "$diff_output")"
        elif [[ "${{ github.event_name }}" == "issue_comment" ]]; then
          # Only comment "no diffs" for slash commands, not automatic PR runs
          gh pr comment "$PR_NUMBER" --body "üìã No ArgoCD diffs to display."
        else
          echo "No ArgoCD diffs detected for this PR (not commenting since this is an automatic run)"
        fi
