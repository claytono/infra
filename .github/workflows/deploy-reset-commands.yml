---
name: Deploy and Reset Commands

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: argocd-pr-${{ github.event.issue.number }}
  cancel-in-progress: false

jobs:
  deploy-reset-commands:
    runs-on: ubuntu-latest

    steps:
    - name: Ensure this is a PR comment
      run: |
        if [ -z "${{ github.event.issue.pull_request.url }}" ]; then
          echo "Not a PR â€“ skipping"
          exit 1
        fi

    - name: Check for deploy command
      id: deploy
      uses: xt0rted/slash-command-action@v2.0.0
      continue-on-error: true
      with:
        command: deploy
        permission-level: admin

    - name: Check for reset command
      id: reset
      uses: xt0rted/slash-command-action@v2.0.0
      continue-on-error: true
      with:
        command: reset
        permission-level: admin

    - name: Connect to Tailscale
      if: steps.deploy.outputs.command-name || steps.reset.outputs.command-name
      uses: tailscale/github-action@main
      with:
        oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TAILSCALE_OAUTH_CLIENT_SECRET }}
        tags: tag:github-actions
        use-cache: true

    - name: Checkout PR head
      if: steps.deploy.outputs.command-name || steps.reset.outputs.command-name
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: refs/pull/${{ github.event.issue.number }}/head

    # Make sure the base branch ref exists locally for the script's diff
    - name: Fetch base branch
      if: steps.deploy.outputs.command-name || steps.reset.outputs.command-name
      run: |
        # Query PR base dynamically instead of assuming 'main'
        BASE=$(gh pr view ${{ github.event.issue.number }} --json baseRefName -q .baseRefName)
        echo "BASE_REF=$BASE" >> $GITHUB_ENV
        git fetch origin "$BASE:$BASE"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get PR Info and Detect Changed Apps
      if: steps.deploy.outputs.command-name || steps.reset.outputs.command-name
      id: pr-info
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        PR_BRANCH=$(gh pr view ${{ github.event.issue.number }} --json headRefName -q .headRefName)
        echo "branch=$PR_BRANCH" >> $GITHUB_OUTPUT

        if [[ "${{ steps.deploy.outputs.command-name }}" == "deploy" ]]; then
          echo "Deploying branch: $PR_BRANCH"
          TARGET_REVISION="$PR_BRANCH"
        elif [[ "${{ steps.reset.outputs.command-name }}" == "reset" ]]; then
          echo "Resetting branch: $PR_BRANCH to main"
          TARGET_REVISION="main"
        fi
        echo "target-revision=$TARGET_REVISION" >> $GITHUB_OUTPUT

        # Detect affected ArgoCD applications
        ./scripts/argocd-detect-apps --base-ref "$BASE_REF" --head-ref HEAD

    - name: Comment No Apps Found
      if: (steps.deploy.outputs.command-name || steps.reset.outputs.command-name)
        && steps.pr-info.outputs.app_count == '0'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh pr comment "${{ github.event.issue.number }}" \
          --body "ðŸ“‹ No ArgoCD applications detected in changed files - nothing to deploy/reset."

    - name: Login to ArgoCD
      if: (steps.deploy.outputs.command-name || steps.reset.outputs.command-name)
        && steps.pr-info.outputs.app_count != '0'
      uses: clowdhaus/argo-cd-action/@main
      env:
        ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
      with:
        version: 2.12.3
        command: login
        options: argocd.cow-banjo.ts.net

    - name: Execute Command
      if: (steps.deploy.outputs.command-name || steps.reset.outputs.command-name)
        && steps.pr-info.outputs.app_count != '0'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |-
        ./scripts/argocd-deploy \
          --apps "${{ steps.pr-info.outputs.apps }}" \
          --target-revision "${{ steps.pr-info.outputs.target-revision }}" \
          --comment-pr "${{ github.event.issue.number }}"
