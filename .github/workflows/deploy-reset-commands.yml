---
name: Deploy and Reset Commands

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: argocd-pr-${{ github.event.issue.number }}
  cancel-in-progress: false

jobs:
  deploy-reset-commands:
    runs-on: ubuntu-latest
    env:
      ARGOCD_SERVER: argocd.cow-banjo.ts.net
      ARGOCD_OPTS: --grpc-web

    steps:
    - name: Ensure this is a PR comment
      run: |
        if [ -z "${{ github.event.issue.pull_request.url }}" ]; then
          echo "Not a PR â€“ skipping"
          exit 1
        fi

    - name: Check for deploy command
      id: deploy
      uses: xt0rted/slash-command-action@bf51f8f5f4ea3d58abc7eca58f77104182b23e88  # v2.0.0
      continue-on-error: true
      with:
        command: deploy
        permission-level: admin

    - name: Check for reset command
      id: reset
      uses: xt0rted/slash-command-action@bf51f8f5f4ea3d58abc7eca58f77104182b23e88  # v2.0.0
      continue-on-error: true
      with:
        command: reset
        permission-level: admin

    - name: Checkout PR head
      if: steps.deploy.outputs.command-name || steps.reset.outputs.command-name
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5
      with:
        fetch-depth: 0
        ref: refs/pull/${{ github.event.issue.number }}/head

    - name: Checkout trusted scripts from main branch
      if: steps.deploy.outputs.command-name || steps.reset.outputs.command-name
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5
      with:
        fetch-depth: 0
        ref: main
        path: trusted-main

    - name: Determine base ref
      if: steps.deploy.outputs.command-name || steps.reset.outputs.command-name
      id: base
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Query PR base dynamically instead of assuming 'main'
        BASE=$(gh pr view ${{ github.event.issue.number }} --json baseRefName -q .baseRefName)
        echo "base=$BASE" >> $GITHUB_OUTPUT
        git fetch origin "$BASE:$BASE"

    - name: Get PR Info
      if: steps.deploy.outputs.command-name || steps.reset.outputs.command-name
      id: pr-info
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        PR_BRANCH=$(gh pr view ${{ github.event.issue.number }} --json headRefName -q .headRefName)
        echo "branch=$PR_BRANCH" >> $GITHUB_OUTPUT

        if [[ "${{ steps.deploy.outputs.command-name }}" == "deploy" ]]; then
          echo "Deploying branch: $PR_BRANCH"
          TARGET_REVISION="$PR_BRANCH"
        elif [[ "${{ steps.reset.outputs.command-name }}" == "reset" ]]; then
          echo "Resetting branch: $PR_BRANCH to main"
          TARGET_REVISION="main"
        fi
        echo "target-revision=$TARGET_REVISION" >> $GITHUB_OUTPUT

    - name: Get PR head SHA
      if: steps.deploy.outputs.command-name || steps.reset.outputs.command-name
      id: pr-head
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        PR_HEAD=$(gh pr view ${{ github.event.issue.number }} --json headRefOid -q .headRefOid)
        echo "sha=$PR_HEAD" >> $GITHUB_OUTPUT

    - name: Detect Changed Apps
      if: steps.deploy.outputs.command-name || steps.reset.outputs.command-name
      id: detect
      uses: ./trusted-main/.github/actions/detect-apps
      with:
        base_ref: ${{ steps.base.outputs.base }}
        head_ref: ${{ steps.pr-head.outputs.sha }}
        pr_number: ${{ github.event.issue.number }}
        action_type: deploy/reset

    - name: Setup ArgoCD environment
      if: (steps.deploy.outputs.command-name || steps.reset.outputs.command-name)
        && steps.detect.outputs.apps != ''
      id: setup-argocd
      uses: ./trusted-main/.github/actions/setup-argocd
      with:
        tailscale_oauth_client_id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
        tailscale_oauth_secret: ${{ secrets.TAILSCALE_OAUTH_CLIENT_SECRET }}

    - name: Execute Command
      if: (steps.deploy.outputs.command-name || steps.reset.outputs.command-name)
        && steps.detect.outputs.apps != ''
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
      run: |-
        "${GITHUB_WORKSPACE}/trusted-main/scripts/argocd-deploy" \
          --apps "${{ steps.detect.outputs.apps }}" \
          --target-revision "${{ steps.pr-info.outputs.target-revision }}" \
          --comment-pr "${{ github.event.issue.number }}" \
          --action-run-url "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
