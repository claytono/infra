---
name: Render Helm Charts

on:
  pull_request:
    types:
    - opened
    - synchronize
    - reopened
  push:
    branches:
    - main

permissions:
  contents: write
  pull-requests: write

jobs:
  render:
    name: Render Helm Charts
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5
      with:
        fetch-depth: 0
        token: ${{ github.token }}
        persist-credentials: false
        ref: ${{ github.event.pull_request.head.ref || github.ref }}

    - name: Check for Kubernetes/Helm-related changes
      uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36  # v3
      id: changes
      with:
        filters: |
          need-render-helm:
            - 'kubernetes/**'
            - 'flake.nix'
            - 'flake.lock'
            - '.github/workflows/render-helm.yaml'

    - name: Install Nix
      if: steps.changes.outputs.need-render-helm == 'true'
      uses: cachix/install-nix-action@fd24c48048070c1be9acd18c9d369a83f0fe94d7  # v31
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Cachix
      if: steps.changes.outputs.need-render-helm == 'true'
      uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad  # v16
      with:
        name: claytono
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

    - name: Cache pre-commit
      if: steps.changes.outputs.need-render-helm == 'true'
      uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830  # v4
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: |
          ${{ runner.os }}-precommit-

    - name: Install pre-commit hooks
      if: steps.changes.outputs.need-render-helm == 'true'
      run: nix develop --command pre-commit install

    - name: Render changed charts
      if: steps.changes.outputs.need-render-helm == 'true'
      run: |
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
        else
          BASE_SHA=${{ github.event.before }}
          HEAD_SHA=${{ github.sha }}
        fi
        echo "Comparing $BASE_SHA..$HEAD_SHA"
        git diff --name-only -z $BASE_SHA $HEAD_SHA \
          | xargs -0 -r -n1 dirname \
          | sort -u \
          | while read -r dir; do
              if [ -f "$dir/render" ]; then
                echo "⏳ Rendering in $dir"
                pushd "$dir"
                nix develop --command ./render
                popd
              else
                echo "⏭  Skipping $dir (no render script)"
              fi
            done

    - name: Check for changes
      if: steps.changes.outputs.need-render-helm == 'true' && github.ref == 'refs/heads/main'
      run: |
        if ! git diff --quiet; then
          echo "Helm manifests need to be regenerated on main branch!"
          git diff --stat
          exit 1
        fi

    - name: Commit regenerated manifests
      if: steps.changes.outputs.need-render-helm == 'true' && github.event_name ==
        'pull_request'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add .
        if ! git diff --cached --quiet; then
          git commit -m "chore: regenerate Helm manifests"
        fi

    - name: Push changes via PAT
      if: steps.changes.outputs.need-render-helm == 'true' && github.event_name ==
        'pull_request'
      run: |-
        BRANCH_NAME="${GITHUB_HEAD_REF:-${GITHUB_REF##*/}}"
        echo "Pushing to branch: $BRANCH_NAME"
        git push "https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository }}" "HEAD:${BRANCH_NAME}"

  analyze-chart-changes:
    name: Analyze Chart Changes with AI
    runs-on: ubuntu-latest
    needs: render
    # Only run on Renovate PRs
    if: github.event_name == 'pull_request' && contains(github.event.pull_request.user.login,
      'renovate')

    steps:
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5
      with:
        fetch-depth: 0
        token: ${{ github.token }}
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Check for Chart.yaml changes
      uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36  # v3
      id: chart-changes
      with:
        filters: |
          chart-files:
            - 'kubernetes/**/Chart.yaml'

    - name: Check for existing analysis
      if: steps.chart-changes.outputs.chart-files == 'true'
      id: check-existing
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        # Run script to get diff hash (without OpenAI key so it fails before AI call)
        TEMP_OUTPUT=$(mktemp)
        python3 scripts/analyze-chart-changes.py --output-file "$TEMP_OUTPUT" 2>/dev/null || true

        DIFF_HASH=$(grep "^diff-hash=" "$TEMP_OUTPUT" 2>/dev/null | cut -d= -f2 || echo "")
        rm -f "$TEMP_OUTPUT"

        if [ -z "$DIFF_HASH" ]; then
          echo "skip=false" >> "$GITHUB_OUTPUT"
          echo "Could not calculate diff hash. Running AI evaluation."
          exit 0
        fi

        # Check if comment with this hash already exists
        EXISTING_COMMENT=$(gh pr view ${{ github.event.pull_request.number }} --json comments --jq '.comments[] | select(.author.login == "github-actions") | select(.body | contains("<!-- diff-hash:")) | .body' | head -1 || echo "")

        if [ -n "$EXISTING_COMMENT" ]; then
          EXISTING_HASH=$(echo "$EXISTING_COMMENT" | grep -o "<!-- diff-hash:[^ ]*" | cut -d: -f2)
          if [ "$EXISTING_HASH" = "$DIFF_HASH" ]; then
            echo "skip=true" >> "$GITHUB_OUTPUT"
            echo "Found existing analysis for this diff (hash: $DIFF_HASH). Skipping AI evaluation."
          else
            echo "skip=false" >> "$GITHUB_OUTPUT"
            echo "Diff has changed (old hash: $EXISTING_HASH, new hash: $DIFF_HASH). Running AI evaluation."
          fi
        else
          echo "skip=false" >> "$GITHUB_OUTPUT"
          echo "No existing analysis found. Running AI evaluation."
        fi

    - name: Analyze changes with AI
      if: steps.chart-changes.outputs.chart-files == 'true' && steps.check-existing.outputs.skip
        != 'true'
      id: ai-analysis
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GH_TOKEN: ${{ github.token }}
      run: |
        python3 scripts/analyze-chart-changes.py

    - name: Post analysis comment and apply labels
      if: steps.ai-analysis.outputs.response != ''
      env:
        GH_TOKEN: ${{ github.token }}
        AI_RESPONSE: ${{ steps.ai-analysis.outputs.response }}
        DIFF_CONTENT: ${{ steps.ai-analysis.outputs.diff-content }}
        DIFF_HASH: ${{ steps.ai-analysis.outputs.diff-hash }}
      run: |-
        # Create comment
        {
          echo "<!-- diff-hash:$DIFF_HASH -->"
          echo "## 🤖 Chart.yaml Change Analysis"
          echo ""
          echo "$AI_RESPONSE"
          echo ""

          # For ROUTINE changes, include the diff formatted as a diff block
          if echo "$AI_RESPONSE" | grep -q "ROUTINE"; then
            echo ""
            echo "$DIFF_CONTENT"
          fi

          echo ""
          echo "---"
          echo ""
          echo "*Automatically generated by the [render-helm](.github/workflows/render-helm.yaml) workflow using AI.*"
        } > /tmp/comment.md

        # Post or update comment
        if ! gh pr comment ${{ github.event.pull_request.number }} --body-file /tmp/comment.md --edit-last; then
          gh pr comment ${{ github.event.pull_request.number }} --body-file /tmp/comment.md
        fi

        # Determine classification and apply label
        if echo "$AI_RESPONSE" | grep -q "ROUTINE"; then
          gh pr edit ${{ github.event.pull_request.number }} --add-label "helm-metadata-only" --remove-label "helm-functional-changes"
        elif echo "$AI_RESPONSE" | grep -q "SIGNIFICANT"; then
          gh pr edit ${{ github.event.pull_request.number }} --add-label "helm-functional-changes" --remove-label "helm-metadata-only"
        fi
