---
# Source: alloy/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: alloy
  labels:
    helm.sh/chart: alloy-0.12.0
    app.kubernetes.io/name: alloy
    app.kubernetes.io/instance: alloy
    
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: alloy
    app.kubernetes.io/component: config
data:
  config.alloy: |-
    logging {
      level  = "info"
      format = "logfmt"
    }
    
    // Test reloader functionality and annotations
    
    discovery.kubernetes "pods" {
      role = "pod"
    }
    
    discovery.relabel "pods" {
      targets = discovery.kubernetes.pods.targets
      
      rule {
        source_labels = ["__meta_kubernetes_pod_phase"]
        regex = "Running"
        action = "keep"
      }
      rule {
        source_labels = ["__meta_kubernetes_namespace"]
        target_label = "namespace"
        action = "replace"
      }
      rule {
        source_labels = ["__meta_kubernetes_pod_name"]
        target_label = "pod"
        action = "replace"
      }
      rule {
        source_labels = ["__meta_kubernetes_pod_container_name"]
        target_label = "container"
        action = "replace"
      }
      rule {
        source_labels = ["__meta_kubernetes_node_name"]
        target_label = "node"
        action = "replace"
      }
      rule {
        regex = "__meta_kubernetes_pod_label_(.+)"
        action = "labelmap"
      }
    }
    
    loki.source.kubernetes "pods" {
      targets    = discovery.relabel.pods.output
      forward_to = [loki.process.k8s.receiver]
    }
    
    loki.process "k8s" {
      stage.cri {}  // parse CRI log format
      forward_to = [loki.write.loki.receiver]
    }
    
    loki.write "loki" {
      endpoint {
        url = "http://loki-gateway/loki/api/v1/push"
      }
    }
