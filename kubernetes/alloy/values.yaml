---
# Grafana Alloy for Kubernetes log collection
alloy:
  # Enable log file mounts
  mounts:
    varlog: true

  # Custom Alloy configuration for Loki with K8s metadata
  configMap:
    create: true
    content: |
      logging {
        level  = "info"
        format = "logfmt"
      }

      // Test reloader functionality and annotations

      discovery.kubernetes "pods" {
        role = "pod"
      }

      discovery.relabel "pods" {
        targets = discovery.kubernetes.pods.targets

        rule {
          source_labels = ["__meta_kubernetes_pod_phase"]
          regex = "Running"
          action = "keep"
        }
        rule {
          source_labels = ["__meta_kubernetes_namespace"]
          target_label = "namespace"
          action = "replace"
        }
        rule {
          source_labels = ["__meta_kubernetes_pod_name"]
          target_label = "pod"
          action = "replace"
        }
        rule {
          source_labels = ["__meta_kubernetes_pod_container_name"]
          target_label = "container"
          action = "replace"
        }
        rule {
          source_labels = ["__meta_kubernetes_node_name"]
          target_label = "node"
          action = "replace"
        }
        rule {
          regex = "__meta_kubernetes_pod_label_(.+)"
          action = "labelmap"
        }
      }

      loki.source.kubernetes "pods" {
        targets    = discovery.relabel.pods.output
        forward_to = [loki.process.k8s.receiver]
      }

      loki.process "k8s" {
        stage.cri {}  // parse CRI log format
        forward_to = [loki.write.loki.receiver]
      }

      loki.write "loki" {
        endpoint {
          url = "http://loki-gateway/loki/api/v1/push"
        }
      }

  # Prometheus scraping
  service:
    enabled: true

controller:
  # Tolerate control-plane taint to run on all nodes
  tolerations:
  - key: node-role.kubernetes.io/control-plane
    operator: Exists
    effect: NoSchedule

  # Pod annotations for Prometheus scraping
  podAnnotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '12345'
    reloader.stakater.com/auto: 'true'
