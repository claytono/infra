---
server:
  containerPorts:
    server: 8443
  service:
    servicePortHttps: 443
    servicePortHttp: 80
  certificate:
    enabled: true
    domain: argocd.k.oneill.net
    issuer:
      kind: ClusterIssuer
      name: letsencrypt
  ingress:
    enabled: true
    ingressClassName: nginx
    hostname: argocd.k.oneill.net
    servicePort: https
    annotations:
      nginx.ingress.kubernetes.io/ssl-passthrough: 'true'
      nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
      gethomepage.dev/enabled: 'true'
      gethomepage.dev/name: Argo CD
      gethomepage.dev/description: GitOps Continuous Delivery
      gethomepage.dev/icon: mdi-git
      gethomepage.dev/group: Home Lab
      ak-type: oidc
      ak-oidc-callback: /api/dex/callback
    path: /
    pathType: Prefix

configs:
  cm:
    url: https://argocd.k.oneill.net
    # GitHub Actions service account configuration
    accounts.github-actions: apiKey
    dex.config: |
      issuer: https://argocd.k.oneill.net/dex
      storage:
        type: memory
      web:
        http: 0.0.0.0:5556
      telemetry:
        http: 0.0.0.0:5558
      frontend:
        theme: argocd
      staticClients:
      - id: argocd
        name: Argo CD
        redirectURIs:
        - https://argocd.k.oneill.net/auth/callback
        secret: $dex.clientSecret
      connectors:
      - type: oidc
        id: authentik
        name: Authentik
        config:
          issuer: https://auth.k.oneill.net/application/o/argocd/
          clientID: $oidc.authentik.clientID
          clientSecret: $oidc.authentik.clientSecret
          scopes:
          - openid
          - profile
          - email
          - groups
          insecureEnableGroups: true
          getUserInfo: true

  rbac:
    # RBAC policy for GitHub Actions service account - minimal required permissions
    policy.csv: |
      # Allow GitHub Actions to read application status
      p, role:github-actions, applications, get, *, allow
      # Allow GitHub Actions to create applications
      p, role:github-actions, applications, create, *, allow
      # Allow GitHub Actions to trigger sync operations
      p, role:github-actions, applications, sync, *, allow
      # Allow GitHub Actions to update applications (needed for target revision changes)
      p, role:github-actions, applications, update, *, allow
      # Allow GitHub Actions to access projects (required for app operations)
      p, role:github-actions, projects, get, *, allow
      # Assign github-actions account to the role
      g, github-actions, role:github-actions
      # Assign authentik admins to admin
      g, authentik Admins, role:admin
  notifications:
    argocdUrl: https://argocd.k.oneill.net
  params:
    # Dex is configured to listen on plain HTTP 5556 via dex.config
    server.dex.server: http://argocd-dex-server:5556
    server.dex.server.strict.tls: 'false'
    dexserver.disable.tls: 'true'

dex:
  # Ensure External Secrets has merged these values into argocd-secret.
  # Populated from 1Password item "argocd" via ExternalSecret "argocd-secret".
  # These envs are not used by the pod itself; they only materialize keys.
  env:
  - name: OIDC_CLIENT_ID
    valueFrom:
      secretKeyRef:
        name: argocd-secret  # ESO writes into this
        key: oidc.authentik.clientID  # required key
  - name: OIDC_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: argocd-secret
        key: oidc.authentik.clientSecret
  - name: DEX_STATIC_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: argocd-secret
        key: dex.clientSecret
