---
apiVersion: external-secrets.io/v1
kind: ExternalSecret

metadata:
  name: democratic-csi-driver-config

spec:
  refreshInterval: 1h
  secretStoreRef:
    name: production
    kind: ClusterSecretStore
  target:
    name: democratic-csi-driver-config
    creationPolicy: Owner
    template:
      data:
        driver-config-file.yaml: |
          driver: synology-iscsi

          # Synology DSM API connection settings
          httpConnection:
            protocol: https
            host: fs2.oneill.net
            port: 5001
            username: "{{ .username }}"
            password: "{{ .password }}"
            allowInsecure: false
            session: "democratic-csi"
            serialize: true

          iscsi:
            targetPortal: "fs2.oneill.net"
            baseiqn: "iqn.2000-01.com.synology:csi."

            lunTemplate:
              # Btrfs thin-provisioned LUN with snapshot support
              type: "BLUN"
              # Store PV ID in description for identification
              description: "{{`{{ parameters.[csi.storage.k8s.io/pv/name] }}`}}"
              dev_attribs:
                # Forced Unit Access for database durability
                - dev_attrib: emulate_fua_write
                  enable: 1
                # Space reclamation (TRIM/UNMAP)
                - dev_attrib: emulate_tpu
                  enable: 1
                # Thin Provisioning Write Same
                - dev_attrib: emulate_tpws
                  enable: 1
                # SCSI SYNCHRONIZE CACHE support
                - dev_attrib: emulate_sync_cache
                  enable: 1

            # Required by Synology API for snapshot creation
            lunSnapshotTemplate:
              # Allow snapshot deletion
              is_locked: false
              # We don't have Synology Storage Console for app-consistent snapshots
              is_app_consistent: false

            # iSCSI target configuration
            targetTemplate:
              # Enable CHAP authentication
              auth_type: 1
              # Limit to single session to prevent multiple writers
              max_sessions: 1
              user: "{{ .username }}"
              password: "{{ .password }}"

          # Volume naming and lifecycle management
          _private:
            csi:
              volume:
                # Generate simple volume names: namespace-pvcname
                idTemplate: "{{`{{ parameters.[csi.storage.k8s.io/pvc/namespace] }}`}}-{{`{{ parameters.[csi.storage.k8s.io/pvc/name] }}`}}"
                # Retain LUNs after PVC deletion for data safety and reuse
                deleteStrategy: "retain"
  data:
  - secretKey: username
    remoteRef:
      key: synology-csi
      property: username
  - secretKey: password
    remoteRef:
      key: synology-csi
      property: password
