---
# Source: synology-csi/templates/node.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/instance: synology-csi
    app.kubernetes.io/name: synology-csi
    helm.sh/template: node.yaml
    helm.sh/chart: synology-csi-0.9.3-SNAPSHOT
  name: synology-csi-node
---
# Source: synology-csi/templates/node.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/instance: synology-csi
    app.kubernetes.io/name: synology-csi
    helm.sh/template: node.yaml
    helm.sh/chart: synology-csi-0.9.3-SNAPSHOT
  name: synology-csi-node
rules:
  - apiGroups: [ "" ]
    resources: [ "secrets" ]
    verbs: [ "get", "list" ]
  - apiGroups: [ "" ]
    resources: [ "nodes" ]
    verbs: [ "get", "list", "update" ]
  - apiGroups: [ "" ]
    resources: [ "namespaces" ]
    verbs: [ "get", "list" ]
  - apiGroups: [ "" ]
    resources: [ "persistentvolumes" ]
    verbs: [ "get", "list", "watch", "update" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "volumeattachments" ]
    verbs: [ "get", "list", "watch", "update" ]
---
# Source: synology-csi/templates/node.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/instance: synology-csi
    app.kubernetes.io/name: synology-csi
    helm.sh/template: node.yaml
    helm.sh/chart: synology-csi-0.9.3-SNAPSHOT
  name: synology-csi-node
subjects:
  - kind: ServiceAccount
    name: synology-csi-node
    namespace: synology-csi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: synology-csi-node
---
# Source: synology-csi/templates/node.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  labels:
    app: node
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/instance: synology-csi
    app.kubernetes.io/name: synology-csi
    helm.sh/template: node.yaml
    helm.sh/chart: synology-csi-0.9.3-SNAPSHOT
  name: synology-csi-node
spec:
  selector:
    matchLabels:
      app: node
      app.kubernetes.io/instance: synology-csi
      app.kubernetes.io/name: synology-csi
      helm.sh/template: node.yaml
  template:
    metadata:
      labels:
        app: node
        app.kubernetes.io/instance: synology-csi
        app.kubernetes.io/name: synology-csi
        helm.sh/template: node.yaml
    spec:
      containers:
        - name: node-driver-registrar
          args:
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(REGISTRATION_PATH)
            - --v=5
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: REGISTRATION_PATH
              value: /var/lib/kubelet/plugins/csi.san.synology.com/csi.sock
          image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.6.3
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        - name: csi-plugin
          args:
            - --client-info=/etc/synology/client-info.yml
            - --endpoint=$(CSI_ENDPOINT)
            - --log-level=info
            - --nodeid=$(KUBE_NODE_NAME)
          env:
            - name: CSI_ENDPOINT
              value: unix://csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: synology/synology-csi:v1.2.0
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          volumeMounts:
            - name: client-info
              mountPath: /etc/synology
              readOnly: true
            - name: device-dir
              mountPath: /dev
            - name: host-root
              mountPath: /host
            - name: kubelet-dir
              mountPath: /var/lib/kubelet
              mountPropagation: Bidirectional
            - name: plugin-dir
              mountPath: /csi
      hostNetwork: true
      serviceAccountName: synology-csi-node
      volumes:
        - 
          name: client-info
          secret:
            secretName: synology-csi-client-info
        - name: device-dir
          hostPath:
            path: /dev
            type: Directory
        - name: host-root
          hostPath:
            path: /
            type: Directory
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi.san.synology.com
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
