---
# Source: synology-csi/templates/snapshotter.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/instance: synology-csi
    app.kubernetes.io/name: synology-csi
    helm.sh/template: snapshotter.yaml
    helm.sh/chart: synology-csi-0.9.3-SNAPSHOT
  name: synology-csi-snapshotter
---
# Source: synology-csi/templates/snapshotter.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/instance: synology-csi
    app.kubernetes.io/name: synology-csi
    helm.sh/template: snapshotter.yaml
    helm.sh/chart: synology-csi-0.9.3-SNAPSHOT
  name: synology-csi-snapshotter
rules:
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "list", "watch", "create", "update", "patch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotclasses" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotcontents" ]
    verbs: [ "create", "get", "list", "watch", "update", "delete" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotcontents/status" ]
    verbs: [ "update" ]
---
# Source: synology-csi/templates/snapshotter.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/instance: synology-csi
    app.kubernetes.io/name: synology-csi
    helm.sh/template: snapshotter.yaml
    helm.sh/chart: synology-csi-0.9.3-SNAPSHOT
  name: synology-csi-snapshotter
subjects:
  - kind: ServiceAccount
    name: synology-csi-snapshotter
    namespace: synology-csi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: synology-csi-snapshotter
---
# Source: synology-csi/templates/snapshotter.yaml
kind: StatefulSet
apiVersion: apps/v1
metadata:
  labels:
    app: snapshotter
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/instance: synology-csi
    app.kubernetes.io/name: synology-csi
    helm.sh/template: snapshotter.yaml
    helm.sh/chart: synology-csi-0.9.3-SNAPSHOT
  name: synology-csi-snapshotter
spec:
  selector:
    matchLabels:
      app: snapshotter
      app.kubernetes.io/instance: synology-csi
      app.kubernetes.io/name: synology-csi
      helm.sh/template: snapshotter.yaml
  serviceName: synology-csi-snapshotter
  template:
    metadata:
      labels:
        app: snapshotter
        app.kubernetes.io/instance: synology-csi
        app.kubernetes.io/name: synology-csi
        helm.sh/template: snapshotter.yaml
    spec:
      containers:
        - name: csi-snapshotter
          args:
            - --csi-address=$(ADDRESS)
            - --v=5
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: registry.k8s.io/sig-storage/csi-snapshotter:v8.2.0
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add: [ "SYS_ADMIN" ]
            privileged: true
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy
        - name: plugin
          args:
            - --client-info=/etc/synology/client-info.yml
            - --endpoint=$(CSI_ENDPOINT)
            - --log-level=info
            - --nodeid=NotUsed
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
          image: synology/synology-csi:v1.2.0
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add: [ "SYS_ADMIN" ]
            privileged: true
          volumeMounts:
            - name: client-info
              mountPath: /etc/synology
              readOnly: true
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy
      hostNetwork: true
      serviceAccountName: synology-csi-snapshotter
      volumes:
        - 
          name: client-info
          secret:
            secretName: synology-csi-client-info
        - name: socket-dir
          emptyDir: { }
